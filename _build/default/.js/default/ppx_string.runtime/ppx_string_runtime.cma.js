// Generated by js_of_ocaml
//# buildInfo:effects=disabled, kind=cma, use-js-string=true, version=6.2.0

//# unitInfo: Provides: Ppx_string_runtime__
//# shape: Ppx_string_runtime__:[[]]
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    Ppx_string_runtime = [0],
    Ppx_string_runtime$0 = [0, Ppx_string_runtime];
   runtime.caml_register_global
    (0, Ppx_string_runtime$0, "Ppx_string_runtime__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Ppx_string_runtime__Ppx_string_runtime_intf
//# shape: Ppx_string_runtime__Ppx_string_runtime_intf:[]
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    Ppx_string_runtime_Ppx_string_ = [0];
   runtime.caml_register_global
    (0,
     Ppx_string_runtime_Ppx_string_,
     "Ppx_string_runtime__Ppx_string_runtime_intf");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Ppx_string_runtime
//# unitInfo: Requires: Stdlib, Stdlib__StringLabels
//# shape: Ppx_string_runtime:[[N,F(1)*,F(1)*,F(1),F(2)]]
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$0 = "",
    global_data = runtime.caml_get_global_data(),
    cst = cst$0,
    empty = cst$0,
    Stdlib_StringLabels = global_data.Stdlib__StringLabels,
    Stdlib = global_data.Stdlib;
   function of_string(t){return t;}
   function convert(t){return t;}
   function concat(list){return Stdlib_StringLabels[7].call(null, cst, list);}
   function pad(t, len){
    var n = runtime.caml_ml_string_length(t);
    if(len <= n) return t;
    var a = Stdlib_StringLabels[1].call(null, len - n | 0, 32);
    return Stdlib[28].call(null, a, t);
   }
   var
    For_string = [0, empty, of_string, convert, concat, pad],
    Ppx_string_runtime = [0, For_string];
   runtime.caml_register_global(4, Ppx_string_runtime, "Ppx_string_runtime");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHB4X3N0cmluZ19ydW50aW1lLmNtYS5qcyIsInNlY3Rpb25zIjpbeyJvZmZzZXQiOnsibGluZSI6OSwiY29sdW1uIjowfSwibWFwIjp7InZlcnNpb24iOjMsImZpbGUiOiJwcHhfc3RyaW5nX3J1bnRpbWUuY21hLmpzIiwic291cmNlcyI6WyIvYnVpbHRpbi9ibGFja2JveC5tbCJdLCJzb3VyY2VzQ29udGVudCI6WyIoKiBnZW5lcmF0ZWQgY29kZSAqKSJdLCJuYW1lcyI6WyJydW50aW1lIiwiUHB4X3N0cmluZ19ydW50aW1lIl0sIm1hcHBpbmdzIjoiSUFBQUEsVUFBQTtBQUFBLElBQUFDLHFCQUFBO0FBQUEsSUFBQUEsdUJBQUEiLCJpZ25vcmVMaXN0IjpbMF19fSx7Im9mZnNldCI6eyJsaW5lIjoyNCwiY29sdW1uIjowfSwibWFwIjp7InZlcnNpb24iOjMsImZpbGUiOiJwcHhfc3RyaW5nX3J1bnRpbWUuY21hLmpzIiwic291cmNlcyI6WyIvYnVpbHRpbi9ibGFja2JveC5tbCJdLCJzb3VyY2VzQ29udGVudCI6WyIoKiBnZW5lcmF0ZWQgY29kZSAqKSJdLCJuYW1lcyI6WyJydW50aW1lIiwiUHB4X3N0cmluZ19ydW50aW1lX1BweF9zdHJpbmdfIl0sIm1hcHBpbmdzIjoiSUFBQUEsVUFBQTtBQUFBLElBQUFDLGlDQUFBIiwiaWdub3JlTGlzdCI6WzBdfX0seyJvZmZzZXQiOnsibGluZSI6NDEsImNvbHVtbiI6MH0sIm1hcCI6eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHB4X3N0cmluZ19ydW50aW1lLmNtYS5qcyIsInNvdXJjZXMiOlsiL2J1aWx0aW4vYmxhY2tib3gubWwiLCIvVXNlcnMvZHMvRG9jdW1lbnRzL3BhdGNod29yay9fb3BhbS9saWIvcHB4X3N0cmluZy9ydW50aW1lL3BweF9zdHJpbmdfcnVudGltZS5tbCJdLCJzb3VyY2VzQ29udGVudCI6WyIoKiBnZW5lcmF0ZWQgY29kZSAqKSIsIm9wZW4gU3RkbGliXG5vcGVuIFN0ZExhYmVsc1xuXG5tb2R1bGUgdHlwZSBTID0gUHB4X3N0cmluZ19ydW50aW1lX2ludGYuU1xuXG5tb2R1bGUgRm9yX3N0cmluZyA9IHN0cnVjdFxuICBsZXQgZW1wdHkgPSBcIlwiXG4gIGxldCBvZl9zdHJpbmcgdCA9IHRcbiAgbGV0IGNvbnZlcnQgdCA9IHRcbiAgbGV0IGNvbmNhdCBsaXN0ID0gU3RyaW5nLmNvbmNhdCB+c2VwOlwiXCIgbGlzdFxuXG4gIGxldCBwYWQgdCB+bGVuID1cbiAgICBsZXQgbiA9IFN0cmluZy5sZW5ndGggdCBpblxuICAgIGlmIG4gPj0gbGVuIHRoZW4gdCBlbHNlIFN0cmluZy5tYWtlIChsZW4gLSBuKSAnICcgXiB0XG4gIDs7XG5cbiAgZXh0ZXJuYWwgaWRlbnRpdHkgOiBzdHJpbmcgLT4gc3RyaW5nID0gXCIlaWRlbnRpdHlcIlxuZW5kXG4iXSwibmFtZXMiOlsicnVudGltZSIsImNzdCIsImdsb2JhbF9kYXRhIiwiZW1wdHkiLCJTdGRsaWJfU3RyaW5nTGFiZWxzIiwiU3RkbGliIiwib2Zfc3RyaW5nIiwidCIsImNvbnZlcnQiLCJjb25jYXQiLCJsaXN0IiwicGFkIiwibGVuIiwibiIsIkZvcl9zdHJpbmciLCJQcHhfc3RyaW5nX3J1bnRpbWUiXSwibWFwcGluZ3MiOiJJQUFBQSxVQUFBO0FBQUEsSUFBQUMsUUFBQTtBQUFBLElBQUFDLGNBQUE7QUFBQSxJQUFBRCxNQUFBO0FBQUEsSUFBQUUsUUFBQTtBQUFBLElBQUFDLHNCQUFBO0FBQUEsSUFBQUMsU0FBQTtBQUFBLFlBQUFDLFVBQUFDLEdDT29CLFNBQUM7QUFBQSxZQUFBQyxRQUFBRCxHQUNILFNBQUM7QUFBQSxZQUFBRSxPQUFBQyxNQUNDLG1EQUEwQjtBQUFBLFlBQUFDLElBQUFKLEdBQUFLO0FBQUFBLFFBQUFDLElBRzFDO0FBQUEsSUFDQSxhQUFpQjtBQUFBLFlBQU87QUFBQSxJQUF5QixrQ0FBSTtBQUFBO0FBQUE7QUFBQSxJQUFBQyxhRGJ6RDtBQUFBLElBQUFDLHFCQUFBIiwiaWdub3JlTGlzdCI6WzBdfX1dfQ==
