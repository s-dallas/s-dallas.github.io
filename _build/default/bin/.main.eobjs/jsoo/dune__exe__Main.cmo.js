// Generated by js_of_ocaml
//# buildInfo:effects=disabled, kind=cmo, use-js-string=true, version=6.2.0

//# unitInfo: Provides: Dune__exe__Main
//# unitInfo: Requires: Js_of_ocaml__Console, Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Patchwork, Sexplib__Sexp, Stdlib, Stdlib__Printf, Stdlib__String
//# shape: Dune__exe__Main:[]
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_buttons$2 = " buttons",
    cst_steps$2 = " steps",
    cst_0f = "%.0f%%",
    cst_svg$3 = ".svg",
    cst_Missing_go_back_button$1 = "Missing go back button.",
    cst_Player$1 = "Player",
    cst_block = "block",
    cst_grid = "grid",
    cst_none = "none",
    cst_p1_buttons$1 = "p1_buttons",
    cst_p1_buttons_img$1 = "p1_buttons_img",
    cst_p2_buttons$1 = "p2_buttons",
    cst_p2_buttons_img$1 = "p2_buttons_img",
    cst_src = "src",
    cst_svgs$3 = "svgs/",
    caml_jsstring_of_string = runtime.caml_jsstring_of_string;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) === 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    dummy = 0,
    global_data = runtime.caml_get_global_data(),
    Patchwork = global_data.Patchwork,
    Sexplib_Sexp = global_data.Sexplib__Sexp,
    Stdlib = global_data.Stdlib,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Stdlib_String = global_data.Stdlib__String,
    Stdlib_Printf = global_data.Stdlib__Printf;
   global_data.Js_of_ocaml__Dom;
   var
    Js_of_ocaml_Console = global_data.Js_of_ocaml__Console,
    cst_Tried_to_unwrap_None = "Tried to unwrap None",
    a = [0, 0., 0., 0.],
    b = [0, 24., 18., 8.],
    c = [0, 32., 15., 8.],
    d = [0, 40.7, 14., 8.],
    e = [0, 49., 14., 8.],
    f = [0, 57.8, 15., 8.],
    g = [0, 66., 19., 8.],
    h = [0, 71., 26., 8.],
    i = [0, 74., 34., 8.],
    j = [0, 75., 43., 8.],
    k = [0, 74.5, 50., 8.],
    l = [0, 0., 0., 0.],
    m = [0, 20., 10., 10.],
    n = [0, 30., 6., 10.],
    o = [0, 40., 5., 10.],
    p = [0, 50.5, 5., 10.],
    q = [0, 60., 7., 10.],
    r = [0, 70., 11., 10.],
    s = [0, 76., 20., 10.],
    t = [0, 80., 31., 10.],
    u = [0, 82., 41., 10.],
    v = [0, 81., 50., 10.];
   function log(s){
    var t1 = caml_jsstring_of_string(s), t0 = Js_of_ocaml_Console[1];
    t0.log(t1);
   }
   function get_svg_image_exn(id){
    var el = Js_of_ocaml_Dom_html[4].call(null, id);
    return el;
   }
   function unwrap_exn(opt){
    if(! opt) return Stdlib[2].call(null, cst_Tried_to_unwrap_None);
    var x = opt[1];
    return x;
   }
   function main_board_positions(player, slot){
    if(1 === player){
     var switcher = slot - 1 | 0;
     if(9 < switcher >>> 0) return a;
     switch(switcher){
       case 0:
        return b;
       case 1:
        return c;
       case 2:
        return d;
       case 3:
        return e;
       case 4:
        return f;
       case 5:
        return g;
       case 6:
        return h;
       case 7:
        return i;
       case 8:
        return j;
       default: return k;
     }
    }
    var switcher$0 = slot - 1 | 0;
    if(9 < switcher$0 >>> 0) return l;
    switch(switcher$0){
      case 0:
       return m;
      case 1:
       return n;
      case 2:
       return o;
      case 3:
       return p;
      case 4:
       return q;
      case 5:
       return r;
      case 6:
       return s;
      case 7:
       return t;
      case 8:
       return u;
      default: return v;
    }
   }
   var
    current_state = [0, 0],
    cst_svgs_50_stack_buttons_svg = "svgs/50_stack_buttons.svg",
    cst_svgs_40_stack_buttons_svg = "svgs/40_stack_buttons.svg",
    cst_svgs_30_stack_buttons_svg = "svgs/30_stack_buttons.svg",
    cst_svgs_20_stack_buttons_svg = "svgs/20_stack_buttons.svg",
    cst_svgs_10_stack_buttons_svg = "svgs/10_stack_buttons.svg",
    cst_svgs_5_stack_buttons_svg = "svgs/5_stack_buttons.svg",
    cst_svgs_1_stack_buttons_svg = "svgs/1_stack_buttons.svg",
    cst_p1_buttons_img = cst_p1_buttons_img$1,
    cst_p1_buttons = cst_p1_buttons$1,
    cst_p2_buttons_img = cst_p2_buttons_img$1,
    cst_p2_buttons = cst_p2_buttons$1,
    cst_Empty = "Empty",
    cst_svg = cst_svg$3,
    cst_svgs = cst_svgs$3,
    cst_ptch = "ptch",
    cst_patch = "patch",
    cst_patch1_image = "patch1_image",
    cst_patch2_image = "patch2_image",
    cst_patch3_image = "patch3_image",
    cst_patch1_cost = "patch1_cost",
    cst_patch1_time = "patch1_time",
    cst_patch2_cost = "patch2_cost",
    cst_patch2_time = "patch2_time",
    cst_patch3_cost = "patch3_cost",
    cst_patch3_time = "patch3_time",
    cst_buttons = cst_buttons$2,
    cst_buttons$0 = cst_buttons$2,
    cst_buttons$1 = cst_buttons$2,
    cst_steps = cst_steps$2,
    cst_steps$0 = cst_steps$2,
    cst_steps$1 = cst_steps$2,
    cst_svg$0 = cst_svg$3,
    cst_svgs$0 = cst_svgs$3,
    cst_svg$1 = cst_svg$3,
    cst_svgs$1 = cst_svgs$3,
    cst_svg$2 = cst_svg$3,
    cst_svgs$2 = cst_svgs$3,
    w = [0, [8, [0, 0, 0], 0, [0, 0], [12, 37, 0]], cst_0f],
    x = [0, [8, [0, 0, 0], 0, [0, 0], [12, 37, 0]], cst_0f],
    y = [0, [8, [0, 0, 0], 0, [0, 0], [12, 37, 0]], cst_0f],
    z = [0, [8, [0, 0, 0], 0, [0, 0], [12, 37, 0]], cst_0f],
    cst_qb_replica = "qb_replica",
    cst_intro = "intro",
    cst_container = "container",
    cst_choose_patch = "choose_patch",
    cst_blur = "blur",
    cst_cube_tt = "cube_tt",
    cst_patch_chosen = "patch_chosen",
    cst_pyramid_tt = "pyramid_tt",
    cst_advance = "advance",
    cst_place_patch = "place_patch",
    cst_start_game = "start_game",
    cst_cancel_patch = "cancel_patch",
    cst_cancel_pp = "cancel_pp",
    cst_choose1 = "choose1",
    cst_player_name = "player_name",
    cst_Player = cst_Player$1,
    cst_p1_buttons_img$0 = cst_p1_buttons_img$1,
    cst_p1_buttons$0 = cst_p1_buttons$1,
    cst_p2_buttons_img$0 = cst_p2_buttons_img$1,
    cst_p2_buttons$0 = cst_p2_buttons$1,
    cst_Game_started = "Game started.",
    cst_Player_name_input_not_foun = "Player name input not found.",
    cst_Player$0 = cst_Player$1,
    cst_Missing_start_button = "Missing start button.",
    cst_Missing_go_back_button = cst_Missing_go_back_button$1,
    cst_Missing_go_back_button$0 = cst_Missing_go_back_button$1,
    cst_Missing_choose_patch_butto = "Missing choose patch button.",
    cst_Missing_place_patch_button = "Missing place patch button.",
    cst_Missing_advance_button = "Missing advance button.";
   function set_button_count_and_src(num_buttons, txt_count_id, image_id){
    var
     button_text = Js_of_ocaml_Dom_html[4].call(null, txt_count_id),
     a = caml_jsstring_of_string(Stdlib[33].call(null, num_buttons)),
     t2 = Js_of_ocaml_Js[2].call(null, a);
    button_text.textContent = t2;
    var
     image = Js_of_ocaml_Dom_html[4].call(null, image_id),
     b =
       50 <= num_buttons
        ? cst_svgs_50_stack_buttons_svg
        : 40
          <= num_buttons
          ? cst_svgs_40_stack_buttons_svg
          : 30
            <= num_buttons
            ? cst_svgs_30_stack_buttons_svg
            : 20
              <= num_buttons
              ? cst_svgs_20_stack_buttons_svg
              : 10
                <= num_buttons
                ? cst_svgs_10_stack_buttons_svg
                : 5
                  <= num_buttons
                  ? cst_svgs_5_stack_buttons_svg
                  : cst_svgs_1_stack_buttons_svg,
     t6 = caml_jsstring_of_string(b);
    image.setAttribute(cst_src, t6);
   }
   function update_buttons_ui(player, player_num){
    var count = player[3];
    return 1 === player_num
            ? set_button_count_and_src
              (count, cst_p1_buttons, cst_p1_buttons_img)
            : set_button_count_and_src
              (count, cst_p2_buttons, cst_p2_buttons_img);
   }
   function find_patch_name(pl$0, i){
    var pl = pl$0;
    for(;;){
     if(! pl) return cst_Empty;
     var tl = pl[2], hd = pl[1];
     if(hd[3] === i){
      var a = caml_call1(Patchwork[2][1], hd[1]);
      return Sexplib_Sexp[51].call(null, 0, a);
     }
     pl = tl;
    }
   }
   function position_token_on_board(img, n){
    var
     state = unwrap_exn(current_state[1]),
     match =
       1 === n
        ? main_board_positions(1, state[6][1])
        : main_board_positions(2, state[7][1]),
     s = match[3],
     y$0 = match[2],
     x$0 = match[1],
     x_str =
       caml_jsstring_of_string
        (caml_call1(Stdlib_Printf[4].call(null, w), x$0)),
     y_str =
       caml_jsstring_of_string
        (caml_call1(Stdlib_Printf[4].call(null, x), y$0)),
     sx_str =
       caml_jsstring_of_string(caml_call1(Stdlib_Printf[4].call(null, y), s)),
     sy_str =
       caml_jsstring_of_string(caml_call1(Stdlib_Printf[4].call(null, z), s));
    img.setAttribute("x", x_str);
    img.setAttribute("y", y_str);
    img.setAttribute("width", sx_str);
    img.setAttribute("height", sy_str);
   }
   var
    t125 =
      Js_of_ocaml_Dom_html[10].call
       (null,
        function(param){
         Js_of_ocaml_Dom_html[4].call(null, cst_qb_replica);
         var
          intro = Js_of_ocaml_Dom_html[6].call(null, cst_intro),
          container = Js_of_ocaml_Dom_html[6].call(null, cst_container),
          patch_interface =
            Js_of_ocaml_Dom_html[4].call(null, cst_choose_patch),
          blur = Js_of_ocaml_Dom_html[4].call(null, cst_blur),
          cube_token = get_svg_image_exn(cst_cube_tt),
          patch_chosen = Js_of_ocaml_Dom_html[4].call(null, cst_patch_chosen),
          pyramid_token = get_svg_image_exn(cst_pyramid_tt),
          advance_button =
            Js_of_ocaml_Dom_html[5].call
             (null, cst_advance, Js_of_ocaml_Dom_html[118][9]),
          place_patch_button =
            Js_of_ocaml_Dom_html[5].call
             (null, cst_place_patch, Js_of_ocaml_Dom_html[118][9]),
          start_game_button =
            Js_of_ocaml_Dom_html[5].call
             (null, cst_start_game, Js_of_ocaml_Dom_html[118][9]),
          go_back_button =
            Js_of_ocaml_Dom_html[5].call
             (null, cst_cancel_patch, Js_of_ocaml_Dom_html[118][9]),
          cancel_place_patch_button =
            Js_of_ocaml_Dom_html[5].call
             (null, cst_cancel_pp, Js_of_ocaml_Dom_html[118][9]),
          choose_patch_1_button =
            Js_of_ocaml_Dom_html[5].call
             (null, cst_choose1, Js_of_ocaml_Dom_html[118][9]),
          player_name =
            Js_of_ocaml_Dom_html[5].call
             (null, cst_player_name, Js_of_ocaml_Dom_html[118][34]),
          t69 = intro.style;
         t69.display = cst_block;
         var t72 = container.style;
         t72.display = cst_none;
         if(advance_button){
          var
           btn = advance_button[1],
           t73 =
             Js_of_ocaml_Dom_html[10].call
              (null,
               function(param){
                var
                 current_player = unwrap_exn(current_state[1])[5],
                 a = unwrap_exn(current_state[1]);
                current_state[1] =
                 [0, caml_call5(Patchwork[8][3], a, 0, 0, 0, 0)];
                return 1 === current_player[1]
                        ? (position_token_on_board
                           (cube_token, 1),
                          update_buttons_ui(current_player, 1),
                          Js_of_ocaml_Js[8])
                        : (position_token_on_board
                           (pyramid_token, 2),
                          update_buttons_ui(current_player, 2),
                          Js_of_ocaml_Js[8]);
               });
          btn.onclick = t73;
         }
         else
          log(cst_Missing_advance_button);
         if(place_patch_button){
          var
           btn$0 = place_patch_button[1],
           t81 =
             Js_of_ocaml_Dom_html[10].call
              (null,
               function(param){
                var t77 = patch_interface.style;
                t77.display = cst_block;
                var t80 = blur.style;
                t80.display = cst_block;
                var
                 p1_img = Js_of_ocaml_Dom_html[4].call(null, cst_patch1_image),
                 p2_img = Js_of_ocaml_Dom_html[4].call(null, cst_patch2_image),
                 p3_img = Js_of_ocaml_Dom_html[4].call(null, cst_patch3_image),
                 a = unwrap_exn(current_state[1])[10],
                 b = unwrap_exn(current_state[1])[8][1],
                 match = caml_call2(Patchwork[2][10], b, a),
                 p3_num = match[3],
                 p2_num = match[2],
                 p1_num = match[1],
                 p1_name =
                   find_patch_name(unwrap_exn(current_state[1])[9], p1_num),
                 p2_name =
                   find_patch_name(unwrap_exn(current_state[1])[9], p2_num),
                 p3_name =
                   find_patch_name(unwrap_exn(current_state[1])[9], p3_num),
                 p1_cost = Js_of_ocaml_Dom_html[4].call(null, cst_patch1_cost),
                 p1_time = Js_of_ocaml_Dom_html[4].call(null, cst_patch1_time),
                 p2_cost = Js_of_ocaml_Dom_html[4].call(null, cst_patch2_cost),
                 p2_time = Js_of_ocaml_Dom_html[4].call(null, cst_patch2_time),
                 p3_cost = Js_of_ocaml_Dom_html[4].call(null, cst_patch3_cost),
                 p3_time = Js_of_ocaml_Dom_html[4].call(null, cst_patch3_time),
                 c = Sexplib_Sexp[43].call(null, p1_name),
                 p1_shape = caml_call1(Patchwork[2][2], c),
                 d = Sexplib_Sexp[43].call(null, p2_name),
                 p2_shape = caml_call1(Patchwork[2][2], d),
                 e = Sexplib_Sexp[43].call(null, p3_name),
                 p3_shape = caml_call1(Patchwork[2][2], e),
                 match$0 = caml_call1(Patchwork[2][12], p1_shape),
                 p1t = match$0[2],
                 p1c = match$0[1],
                 match$1 = caml_call1(Patchwork[2][12], p2_shape),
                 p2t = match$1[2],
                 p2c = match$1[1],
                 match$2 = caml_call1(Patchwork[2][12], p3_shape),
                 p3t = match$2[2],
                 p3c = match$2[1],
                 f = Stdlib[33].call(null, p1c),
                 g =
                   caml_jsstring_of_string
                    (Stdlib[28].call(null, f, cst_buttons)),
                 t20 = Js_of_ocaml_Js[2].call(null, g);
                p1_cost.textContent = t20;
                var
                 h = Stdlib[33].call(null, p2c),
                 i =
                   caml_jsstring_of_string
                    (Stdlib[28].call(null, h, cst_buttons$0)),
                 t22 = Js_of_ocaml_Js[2].call(null, i);
                p2_cost.textContent = t22;
                var
                 j = Stdlib[33].call(null, p3c),
                 k =
                   caml_jsstring_of_string
                    (Stdlib[28].call(null, j, cst_buttons$1)),
                 t24 = Js_of_ocaml_Js[2].call(null, k);
                p3_cost.textContent = t24;
                var
                 l = Stdlib[33].call(null, p1t),
                 m =
                   caml_jsstring_of_string(Stdlib[28].call(null, l, cst_steps)),
                 t26 = Js_of_ocaml_Js[2].call(null, m);
                p1_time.textContent = t26;
                var
                 n = Stdlib[33].call(null, p2t),
                 o =
                   caml_jsstring_of_string
                    (Stdlib[28].call(null, n, cst_steps$0)),
                 t28 = Js_of_ocaml_Js[2].call(null, o);
                p2_time.textContent = t28;
                var
                 p = Stdlib[33].call(null, p3t),
                 q =
                   caml_jsstring_of_string
                    (Stdlib[28].call(null, p, cst_steps$1)),
                 t30 = Js_of_ocaml_Js[2].call(null, q);
                p3_time.textContent = t30;
                var
                 r = Stdlib[28].call(null, p1_name, cst_svg$0),
                 p1_src = Stdlib[28].call(null, cst_svgs$0, r),
                 s = Stdlib[28].call(null, p2_name, cst_svg$1),
                 p2_src = Stdlib[28].call(null, cst_svgs$1, s),
                 t = Stdlib[28].call(null, p3_name, cst_svg$2),
                 p3_src = Stdlib[28].call(null, cst_svgs$2, t),
                 t34 = caml_jsstring_of_string(p1_src);
                p1_img.setAttribute(cst_src, t34);
                var t37 = caml_jsstring_of_string(p2_src);
                p2_img.setAttribute(cst_src, t37);
                var t40 = caml_jsstring_of_string(p3_src);
                p3_img.setAttribute(cst_src, t40);
                return Js_of_ocaml_Js[8];
               });
          btn$0.onclick = t81;
         }
         else
          log(cst_Missing_place_patch_button);
         if(choose_patch_1_button){
          var
           btn$1 = choose_patch_1_button[1],
           t95 =
             Js_of_ocaml_Dom_html[10].call
              (null,
               function(param){
                var
                 a = unwrap_exn(current_state[1])[10],
                 b = unwrap_exn(current_state[1])[8][1];
                caml_call2(Patchwork[2][10], b, a);
                var t85 = patch_interface.style;
                t85.display = cst_none;
                var t88 = blur.style;
                t88.display = cst_none;
                var t91 = container.style;
                t91.display = cst_none;
                var t94 = patch_chosen.style;
                t94.display = cst_grid;
                return Js_of_ocaml_Js[8];
               });
          btn$1.onclick = t95;
         }
         else
          log(cst_Missing_choose_patch_butto);
         if(cancel_place_patch_button){
          var
           t107 = cancel_place_patch_button[1],
           t106 =
             Js_of_ocaml_Dom_html[10].call
              (null,
               function(param){
                var t99 = patch_chosen.style;
                t99.display = cst_none;
                var t102 = container.style;
                t102.display = cst_grid;
                var t105 = blur.style;
                t105.display = cst_none;
                return Js_of_ocaml_Js[8];
               });
          t107.onclick = t106;
         }
         else
          log(cst_Missing_go_back_button$0);
         if(go_back_button){
          var
           t115 = go_back_button[1],
           t114 =
             Js_of_ocaml_Dom_html[10].call
              (null,
               function(param){
                var t110 = patch_interface.style;
                t110.display = cst_none;
                var t113 = blur.style;
                t113.display = cst_none;
                return Js_of_ocaml_Js[8];
               });
          t115.onclick = t114;
         }
         else
          log(cst_Missing_go_back_button);
         if(start_game_button){
          var
           t124 = start_game_button[1],
           t123 =
             Js_of_ocaml_Dom_html[10].call
              (null,
               function(param){
                var t118 = intro.style;
                t118.display = cst_none;
                var t121 = container.style;
                t121.display = cst_grid;
                if(player_name)
                 var
                  input = player_name[1],
                  raw_input = runtime.caml_string_of_jsstring(input.value);
                else{
                 log(cst_Player_name_input_not_foun);
                 var raw_input = cst_Player$0;
                }
                var
                 pname = Stdlib_String[24].call(null, raw_input),
                 pname$0 = pname === "" ? cst_Player : pname,
                 state = Patchwork[9].call(null, pname$0);
                current_state[1] = [0, state];
                var pl$0 = state[9], pl = pl$0;
                for(;;){
                 if(! pl){
                  position_token_on_board(cube_token, 1);
                  position_token_on_board(pyramid_token, 2);
                  var count = 5;
                  set_button_count_and_src
                   (count, cst_p1_buttons$0, cst_p1_buttons_img$0);
                  set_button_count_and_src
                   (count, cst_p2_buttons$0, cst_p2_buttons_img$0);
                  log(cst_Game_started);
                  return Js_of_ocaml_Js[8];
                 }
                 var
                  tl = pl[2],
                  hd = pl[1],
                  e = Stdlib[33].call(null, hd[3] - 1 | 0),
                  patch_id = Stdlib[28].call(null, cst_patch, e),
                  n = hd[3],
                  patch_name = find_patch_name(pl, n),
                  a = Sexplib_Sexp[43].call(null, patch_name),
                  patch_shape = caml_call1(Patchwork[2][2], a),
                  match = caml_call1(Patchwork[2][11], patch_shape),
                  row = match[2],
                  col = match[1],
                  b = Stdlib[28].call(null, patch_name, cst_svg),
                  img_src = Stdlib[28].call(null, cst_svgs, b),
                  patch_image = Js_of_ocaml_Dom_html[4].call(null, patch_id),
                  c = Stdlib[33].call(null, n - 1 | 0),
                  d = Stdlib[28].call(null, cst_ptch, c),
                  patch_cont = Js_of_ocaml_Dom_html[4].call(null, d),
                  no_priority = Js_of_ocaml_Js[3],
                  t9 = caml_jsstring_of_string(img_src);
                 patch_image.setAttribute(cst_src, t9);
                 var
                  t13 = caml_jsstring_of_string(Stdlib[33].call(null, col)),
                  t11 = patch_cont.style;
                 t11.setProperty("--cols", t13, no_priority);
                 var
                  t18 = caml_jsstring_of_string(Stdlib[33].call(null, row)),
                  t16 = patch_cont.style;
                 t16.setProperty("--rows", t18, no_priority);
                 pl = tl;
                }
               });
          t124.onclick = t123;
         }
         else
          log(cst_Missing_start_button);
         return Js_of_ocaml_Js[8];
        }),
    t126 = Js_of_ocaml_Dom_html[8];
   t126.onload = t125;
   var Dune_exe_Main = [0];
   runtime.caml_register_global(199, Dune_exe_Main, "Dune__exe__Main");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLm1haW4uZW9ianMvanNvby9kdW5lX19leGVfX01haW4uY21vLmpzIiwic2VjdGlvbnMiOlt7Im9mZnNldCI6eyJsaW5lIjoxMCwiY29sdW1uIjowfSwibWFwIjp7InZlcnNpb24iOjMsImZpbGUiOiIubWFpbi5lb2Jqcy9qc29vL2R1bmVfX2V4ZV9fTWFpbi5jbW8uanMiLCJzb3VyY2VzIjpbIi9idWlsdGluL2JsYWNrYm94Lm1sIiwiL3dvcmtzcGFjZV9yb290L2Jpbi9tYWluLm1sIl0sInNvdXJjZXNDb250ZW50IjpbIigqIGdlbmVyYXRlZCBjb2RlICopIiwib3BlbiEgSnNfb2Zfb2NhbWxcbm9wZW4gUGF0Y2h3b3JrXG5tb2R1bGUgQyA9IEpzX29mX29jYW1sLkNvbnNvbGVcblxubGV0IGxvZyBzID0gQy4oY29uc29sZSMjbG9nIChKcy5zdHJpbmcgcykpXG5cbmxldCBnZXRfc3ZnX2ltYWdlX2V4biBpZCA6IERvbV9zdmcuaW1hZ2VFbGVtZW50IEpzLnQgPVxuICBsZXQgZWwgPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9leG4gaWQgaW5cbiAgKEpzLlVuc2FmZS5jb2VyY2UgZWwgOiBEb21fc3ZnLmltYWdlRWxlbWVudCBKcy50KVxuXG5sZXQgdW53cmFwX2V4biBvcHQgPVxuICBtYXRjaCBvcHQgd2l0aFxuICB8IFNvbWUgeCAtPiB4XG4gIHwgTm9uZSAtPiBmYWlsd2l0aCBcIlRyaWVkIHRvIHVud3JhcCBOb25lXCJcblxubGV0IF9tYWluX2JvYXJkX3Bvc2l0aW9ucyBwbGF5ZXIgc2xvdCA9XG4gIGlmIHBsYXllciA9IDEgdGhlblxuICAgIG1hdGNoIHNsb3Qgd2l0aFxuICAgIHwgMSAtPiAoMjQuMCwgMTguMCwgOC4wKVxuICAgIHwgMiAtPiAoMzIuMCwgMTUuMCwgOC4wKVxuICAgIHwgMyAtPiAoNDAuNywgMTQuMCwgOC4wKVxuICAgIHwgNCAtPiAoNDkuMCwgMTQuMCwgOC4wKVxuICAgIHwgNSAtPiAoNTcuOCwgMTUuMCwgOC4wKVxuICAgIHwgNiAtPiAoNjYuMCwgMTkuMCwgOC4wKVxuICAgIHwgNyAtPiAoNzEuMCwgMjYuMCwgOC4wKVxuICAgIHwgOCAtPiAoNzQuMCwgMzQuMCwgOC4wKVxuICAgIHwgOSAtPiAoNzUuMCwgNDMuMCwgOC4wKVxuICAgIHwgMTAgLT4gKDc0LjUsIDUwLjAsIDguMClcbiAgICB8IF8gLT4gKDAuMCwgMC4wLCAwLjApXG4gIGVsc2VcbiAgICBtYXRjaCBzbG90IHdpdGhcbiAgICB8IDEgLT4gKDIwLjAsIDEwLjAsIDEwLjApXG4gICAgfCAyIC0+ICgzMC4wLCA2LjAsIDEwLjApXG4gICAgfCAzIC0+ICg0MC4wLCA1LjAsIDEwLjApXG4gICAgfCA0IC0+ICg1MC41LCA1LjAsIDEwLjApXG4gICAgfCA1IC0+ICg2MC4wLCA3LjAsIDEwLjApXG4gICAgfCA2IC0+ICg3MC4wLCAxMS4wLCAxMC4wKVxuICAgIHwgNyAtPiAoNzYuMCwgMjAuMCwgMTAuMClcbiAgICB8IDggLT4gKDgwLjAsIDMxLjAsIDEwLjApXG4gICAgfCA5IC0+ICg4Mi4wLCA0MS4wLCAxMC4wKVxuICAgIHwgMTAgLT4gKDgxLjAsIDUwLjAsIDEwLjApXG4gICAgfCBfIC0+ICgwLjAsIDAuMCwgMC4wKVxuXG5sZXQgaW5pdGlhbGl6ZV9nYW1lIHBuYW1lID0gX2luaXQgcG5hbWVcbmxldCBjdXJyZW50X3N0YXRlIDogR2FtZV9zdGF0ZS50IG9wdGlvbiByZWYgPSByZWYgTm9uZVxubGV0IHBlbmRpbmdfcGF0Y2hfaW5kZXggOiBpbnQgb3B0aW9uIHJlZiA9IHJlZiBOb25lXG4oKlxubGV0IGluaXRfcmVwbGljYV9ncmlkIH5jb2xzICgpID1cbiAgbGV0IGRvYyA9IERvbV9odG1sLmRvY3VtZW50IGluXG4gIGxldCBjZWxscyA9IGRvYyMjcXVlcnlTZWxlY3RvckFsbCAoSnMuc3RyaW5nIFwiI3BhdGNoX2Nob3NlbiAucmVwbGljYS1jZWxsXCIpIGluXG4gIGZvciBpID0gMCB0byBjZWxscyMjLmxlbmd0aCAtIDEgZG9cbiAgICBKcy5PcHQuaXRlclxuICAgICAgKGNlbGxzIyNpdGVtIGkpXG4gICAgICAoZnVuIG4gLT5cbiAgICAgICAgbGV0IGNlbGwgPSAoSnMuVW5zYWZlLmNvZXJjZSBuIDogRG9tX2h0bWwuZWxlbWVudCBKcy50KSBpblxuICAgICAgICBsZXQgcm93ID0gKGkgLyBjb2xzKSArIDEgaW5cbiAgICAgICAgbGV0IGNvbCA9IChpIG1vZCBjb2xzKSArIDEgaW5cbiAgICAgICAgKCogU3RvcmUgYXMgZGF0YS0qIGZvciBlYXN5IHJlYWRzICopXG4gICAgICAgIGNlbGwjI3NldEF0dHJpYnV0ZSAoSnMuc3RyaW5nIFwiZGF0YS1yb3dcIikgKEpzLnN0cmluZyAoc3RyaW5nX29mX2ludCByb3cpKTtcbiAgICAgICAgY2VsbCMjc2V0QXR0cmlidXRlIChKcy5zdHJpbmcgXCJkYXRhLWNvbFwiKSAoSnMuc3RyaW5nIChzdHJpbmdfb2ZfaW50IGNvbCkpO1xuXG4gICAgICAgIGNlbGwjIy5vbmNsaWNrIDo9XG4gICAgICAgICAgRG9tX2h0bWwuaGFuZGxlciAoZnVuIF9ldiAtPlxuICAgICAgICAgICAgICBsZXQgciA9XG4gICAgICAgICAgICAgICAgaW50X29mX3N0cmluZyAoSnMudG9fc3RyaW5nIChjZWxsIyNnZXRBdHRyaWJ1dGUgKEpzLnN0cmluZyBcImRhdGEtcm93XCIpKSlcbiAgICAgICAgICAgICAgaW5cbiAgICAgICAgICAgICAgbGV0IGMgPVxuICAgICAgICAgICAgICAgIGludF9vZl9zdHJpbmcgKEpzLnRvX3N0cmluZyAoY2VsbCMjZ2V0QXR0cmlidXRlIChKcy5zdHJpbmcgXCJkYXRhLWNvbFwiKSkpXG4gICAgICAgICAgICAgIGluXG4gICAgICAgICAgICAgIEZpcmVidWcuY29uc29sZSMjbG9nXG4gICAgICAgICAgICAgICAgKEpzLnN0cmluZyAoUHJpbnRmLnNwcmludGYgXCJjbGlja2VkIGNlbGwgcj0lZCBjPSVkXCIgciBjKSk7XG4gICAgICAgICAgICAgIEpzLl9mYWxzZSkpXG4gICAgICAgICAgICAgIGRvbmUgKilcblxubGV0IGJ1dHRvbl9pbWFnZV9nZXRfc3JjIG51bV9idXR0b25zID1cbiAgaWYgbnVtX2J1dHRvbnMgPj0gNTAgdGhlbiBcInN2Z3MvNTBfc3RhY2tfYnV0dG9ucy5zdmdcIlxuICBlbHNlIGlmIG51bV9idXR0b25zID49IDQwIHRoZW4gXCJzdmdzLzQwX3N0YWNrX2J1dHRvbnMuc3ZnXCJcbiAgZWxzZSBpZiBudW1fYnV0dG9ucyA+PSAzMCB0aGVuIFwic3Zncy8zMF9zdGFja19idXR0b25zLnN2Z1wiXG4gIGVsc2UgaWYgbnVtX2J1dHRvbnMgPj0gMjAgdGhlbiBcInN2Z3MvMjBfc3RhY2tfYnV0dG9ucy5zdmdcIlxuICBlbHNlIGlmIG51bV9idXR0b25zID49IDEwIHRoZW4gXCJzdmdzLzEwX3N0YWNrX2J1dHRvbnMuc3ZnXCJcbiAgZWxzZSBpZiBudW1fYnV0dG9ucyA+PSA1IHRoZW4gXCJzdmdzLzVfc3RhY2tfYnV0dG9ucy5zdmdcIlxuICBlbHNlIFwic3Zncy8xX3N0YWNrX2J1dHRvbnMuc3ZnXCJcblxubGV0IHNldF9idXR0b25fY291bnRfYW5kX3NyYyB+Y291bnQgfnR4dF9jb3VudF9pZCB+aW1hZ2VfaWQgPVxuICBsZXQgYnV0dG9uX3RleHQgPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9leG4gdHh0X2NvdW50X2lkIGluXG4gIGJ1dHRvbl90ZXh0IyMudGV4dENvbnRlbnQgOj0gSnMuc29tZSAoSnMuc3RyaW5nIChzdHJpbmdfb2ZfaW50IGNvdW50KSk7XG4gIGxldCBpbWFnZSA9IERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2V4biBpbWFnZV9pZCBpblxuICBpbWFnZSMjc2V0QXR0cmlidXRlIChKcy5zdHJpbmcgXCJzcmNcIikgKEpzLnN0cmluZyAoYnV0dG9uX2ltYWdlX2dldF9zcmMgY291bnQpKVxuXG5sZXQgdXBkYXRlX2J1dHRvbnNfdWkgKHBsYXllciA6IFBsYXllci50KSBwbGF5ZXJfbnVtID1cbiAgbGV0IGNvdW50ID0gcGxheWVyLmJ1dHRvbnNfb3duZWQgaW5cbiAgaWYgcGxheWVyX251bSA9IDEgdGhlblxuICAgIHNldF9idXR0b25fY291bnRfYW5kX3NyYyB+Y291bnQgfnR4dF9jb3VudF9pZDpcInAxX2J1dHRvbnNcIiB+aW1hZ2VfaWQ6XCJwMV9idXR0b25zX2ltZ1wiXG4gIGVsc2VcbiAgICBzZXRfYnV0dG9uX2NvdW50X2FuZF9zcmMgfmNvdW50IH50eHRfY291bnRfaWQ6XCJwMl9idXR0b25zXCIgfmltYWdlX2lkOlwicDJfYnV0dG9uc19pbWdcIlxuXG5sZXQgcmVjIGZpbmRfcGF0Y2hfbmFtZSBwbCBpID1cbiAgbWF0Y2ggcGwgd2l0aFxuICB8IFtdIC0+IFwiRW1wdHlcIlxuICB8IChoZCA6IFBhdGNoLnQpIDo6IHRsIC0+XG4gICAgICBpZiBoZC5wb3NfYXJvdW5kX2JvYXJkID0gaSB0aGVuXG4gICAgICAgIFNleHBsaWIuU2V4cC50b19zdHJpbmdfaHVtIChQYXRjaC5zZXhwX29mX3BhdGNoX3NoYXBlIGhkLnNoYXBlKVxuICAgICAgZWxzZSBmaW5kX3BhdGNoX25hbWUgdGwgaVxuXG5sZXQgcmVjIHBsYWNlX3BhdGNoX2ltYWdlc19hcm91bmRfY2lyY2xlIHBsID1cbiAgbGV0IGFkZF9wYXRjaF9pbWFnZV9zcmMgbiBwYXRjaF9pZCA9XG4gICAgbGV0IHBhdGNoX25hbWUgPSBmaW5kX3BhdGNoX25hbWUgcGwgbiBpblxuICAgIGxldCBwYXRjaF9zaGFwZSA9IFBhdGNoLnBhdGNoX3NoYXBlX29mX3NleHAgKFNleHBsaWIuU2V4cC5vZl9zdHJpbmcgcGF0Y2hfbmFtZSkgaW5cbiAgICBsZXQgY29sLCByb3cgPSBQYXRjaC5nZXRfY29sX3JvdyBwYXRjaF9zaGFwZSBpblxuICAgIGxldCBpbWdfc3JjID0gXCJzdmdzL1wiIF4gcGF0Y2hfbmFtZSBeIFwiLnN2Z1wiIGluXG4gICAgbGV0IHBhdGNoX2ltYWdlID0gRG9tX2h0bWwuZ2V0RWxlbWVudEJ5SWRfZXhuIHBhdGNoX2lkIGluXG4gICAgbGV0IHBhdGNoX2NvbnQgPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9leG4gKFwicHRjaFwiIF4gc3RyaW5nX29mX2ludCAobiAtIDEpKSBpblxuICAgIGxldCBub19wcmlvcml0eSA6IEpzLmpzX3N0cmluZyBKcy50IEpzLm9wdGRlZiA9IEpzLnVuZGVmaW5lZCBpblxuICAgIHBhdGNoX2ltYWdlIyNzZXRBdHRyaWJ1dGUgKEpzLnN0cmluZyBcInNyY1wiKSAoSnMuc3RyaW5nIGltZ19zcmMpO1xuICAgIGlnbm9yZVxuICAgICAgKHBhdGNoX2NvbnQjIy5zdHlsZSMjc2V0UHJvcGVydHlcbiAgICAgICAgIChKcy5zdHJpbmcgXCItLWNvbHNcIilcbiAgICAgICAgIChKcy5zdHJpbmcgKHN0cmluZ19vZl9pbnQgY29sKSlcbiAgICAgICAgIG5vX3ByaW9yaXR5KTtcbiAgICBpZ25vcmVcbiAgICAgIChwYXRjaF9jb250IyMuc3R5bGUjI3NldFByb3BlcnR5XG4gICAgICAgICAoSnMuc3RyaW5nIFwiLS1yb3dzXCIpXG4gICAgICAgICAoSnMuc3RyaW5nIChzdHJpbmdfb2ZfaW50IHJvdykpXG4gICAgICAgICBub19wcmlvcml0eSlcbiAgaW5cbiAgbWF0Y2ggcGwgd2l0aFxuICB8IFtdIC0+ICgpXG4gIHwgaGQgOjogdGwgLT5cbiAgICAgIGxldCBpZCA9IFwicGF0Y2hcIiBeIHN0cmluZ19vZl9pbnQgKGhkLnBvc19hcm91bmRfYm9hcmQgLSAxKSBpblxuICAgICAgYWRkX3BhdGNoX2ltYWdlX3NyYyBoZC5wb3NfYXJvdW5kX2JvYXJkIGlkO1xuICAgICAgcGxhY2VfcGF0Y2hfaW1hZ2VzX2Fyb3VuZF9jaXJjbGUgdGxcblxubGV0IHNldF9wYXRjaF9jaG9pY2Vfc3JjcyAoKSA9XG4gIGxldCBwMV9pbWcgPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9leG4gXCJwYXRjaDFfaW1hZ2VcIiBpblxuICBsZXQgcDJfaW1nID0gRG9tX2h0bWwuZ2V0RWxlbWVudEJ5SWRfZXhuIFwicGF0Y2gyX2ltYWdlXCIgaW5cbiAgbGV0IHAzX2ltZyA9IERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2V4biBcInBhdGNoM19pbWFnZVwiIGluXG4gIGxldCBwMV9udW0sIHAyX251bSwgcDNfbnVtID1cbiAgICBQYXRjaC5nZXRfdGhyZWUgKHVud3JhcF9leG4gIWN1cnJlbnRfc3RhdGUpLm5ldXQucG9zXG4gICAgICAodW53cmFwX2V4biAhY3VycmVudF9zdGF0ZSkucGF0Y2hlc19yZW1haW5pbmdcbiAgaW5cbiAgbGV0IHAxX25hbWUgPSBmaW5kX3BhdGNoX25hbWUgKHVud3JhcF9leG4gIWN1cnJlbnRfc3RhdGUpLnBhdGNoZXMgcDFfbnVtIGluXG4gIGxldCBwMl9uYW1lID0gZmluZF9wYXRjaF9uYW1lICh1bndyYXBfZXhuICFjdXJyZW50X3N0YXRlKS5wYXRjaGVzIHAyX251bSBpblxuICBsZXQgcDNfbmFtZSA9IGZpbmRfcGF0Y2hfbmFtZSAodW53cmFwX2V4biAhY3VycmVudF9zdGF0ZSkucGF0Y2hlcyBwM19udW0gaW5cbiAgbGV0IHAxX2Nvc3QgPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9leG4gXCJwYXRjaDFfY29zdFwiIGluXG4gIGxldCBwMV90aW1lID0gRG9tX2h0bWwuZ2V0RWxlbWVudEJ5SWRfZXhuIFwicGF0Y2gxX3RpbWVcIiBpblxuICBsZXQgcDJfY29zdCA9IERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2V4biBcInBhdGNoMl9jb3N0XCIgaW5cbiAgbGV0IHAyX3RpbWUgPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9leG4gXCJwYXRjaDJfdGltZVwiIGluXG4gIGxldCBwM19jb3N0ID0gRG9tX2h0bWwuZ2V0RWxlbWVudEJ5SWRfZXhuIFwicGF0Y2gzX2Nvc3RcIiBpblxuICBsZXQgcDNfdGltZSA9IERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2V4biBcInBhdGNoM190aW1lXCIgaW5cbiAgbGV0IHAxX3NoYXBlID0gUGF0Y2gucGF0Y2hfc2hhcGVfb2Zfc2V4cCAoU2V4cGxpYi5TZXhwLm9mX3N0cmluZyBwMV9uYW1lKSBpblxuICBsZXQgcDJfc2hhcGUgPSBQYXRjaC5wYXRjaF9zaGFwZV9vZl9zZXhwIChTZXhwbGliLlNleHAub2Zfc3RyaW5nIHAyX25hbWUpIGluXG4gIGxldCBwM19zaGFwZSA9IFBhdGNoLnBhdGNoX3NoYXBlX29mX3NleHAgKFNleHBsaWIuU2V4cC5vZl9zdHJpbmcgcDNfbmFtZSkgaW5cbiAgbGV0IHAxYywgcDF0ID0gUGF0Y2guZ2V0X3ZhbHVlcyBwMV9zaGFwZSBpblxuICBsZXQgcDJjLCBwMnQgPSBQYXRjaC5nZXRfdmFsdWVzIHAyX3NoYXBlIGluXG4gIGxldCBwM2MsIHAzdCA9IFBhdGNoLmdldF92YWx1ZXMgcDNfc2hhcGUgaW5cbiAgcDFfY29zdCMjLnRleHRDb250ZW50IDo9IEpzLnNvbWUgKEpzLnN0cmluZyAoc3RyaW5nX29mX2ludCBwMWMgXiBcIiBidXR0b25zXCIpKTtcbiAgcDJfY29zdCMjLnRleHRDb250ZW50IDo9IEpzLnNvbWUgKEpzLnN0cmluZyAoc3RyaW5nX29mX2ludCBwMmMgXiBcIiBidXR0b25zXCIpKTtcbiAgcDNfY29zdCMjLnRleHRDb250ZW50IDo9IEpzLnNvbWUgKEpzLnN0cmluZyAoc3RyaW5nX29mX2ludCBwM2MgXiBcIiBidXR0b25zXCIpKTtcbiAgcDFfdGltZSMjLnRleHRDb250ZW50IDo9IEpzLnNvbWUgKEpzLnN0cmluZyAoc3RyaW5nX29mX2ludCBwMXQgXiBcIiBzdGVwc1wiKSk7XG4gIHAyX3RpbWUjIy50ZXh0Q29udGVudCA6PSBKcy5zb21lIChKcy5zdHJpbmcgKHN0cmluZ19vZl9pbnQgcDJ0IF4gXCIgc3RlcHNcIikpO1xuICBwM190aW1lIyMudGV4dENvbnRlbnQgOj0gSnMuc29tZSAoSnMuc3RyaW5nIChzdHJpbmdfb2ZfaW50IHAzdCBeIFwiIHN0ZXBzXCIpKTtcbiAgbGV0IHAxX3NyYyA9IFwic3Zncy9cIiBeIHAxX25hbWUgXiBcIi5zdmdcIiBpblxuICBsZXQgcDJfc3JjID0gXCJzdmdzL1wiIF4gcDJfbmFtZSBeIFwiLnN2Z1wiIGluXG4gIGxldCBwM19zcmMgPSBcInN2Z3MvXCIgXiBwM19uYW1lIF4gXCIuc3ZnXCIgaW5cbiAgcDFfaW1nIyNzZXRBdHRyaWJ1dGUgKEpzLnN0cmluZyBcInNyY1wiKSAoSnMuc3RyaW5nIHAxX3NyYyk7XG4gIHAyX2ltZyMjc2V0QXR0cmlidXRlIChKcy5zdHJpbmcgXCJzcmNcIikgKEpzLnN0cmluZyBwMl9zcmMpO1xuICBwM19pbWcjI3NldEF0dHJpYnV0ZSAoSnMuc3RyaW5nIFwic3JjXCIpIChKcy5zdHJpbmcgcDNfc3JjKVxuXG5sZXQgcG9zaXRpb25fdG9rZW5fb25fYm9hcmQgKGltZyA6IERvbV9zdmcuaW1hZ2VFbGVtZW50IEpzLnQpIG4gPVxuICBsZXQgc3RhdGUgPSB1bndyYXBfZXhuICFjdXJyZW50X3N0YXRlIGluXG4gIGxldCB4LCB5LCBzID1cbiAgICBpZiBuID0gMSB0aGVuIF9tYWluX2JvYXJkX3Bvc2l0aW9ucyAxIHN0YXRlLnRrMS5wb3NpdGlvblxuICAgIGVsc2UgX21haW5fYm9hcmRfcG9zaXRpb25zIDIgc3RhdGUudGsyLnBvc2l0aW9uXG4gIGluXG4gIGxldCB4X3N0ciA9IFByaW50Zi5zcHJpbnRmIFwiJS4wZiUlXCIgeCB8PiBKcy5zdHJpbmcgaW5cbiAgbGV0IHlfc3RyID0gUHJpbnRmLnNwcmludGYgXCIlLjBmJSVcIiB5IHw+IEpzLnN0cmluZyBpblxuICBsZXQgc3hfc3RyID0gUHJpbnRmLnNwcmludGYgXCIlLjBmJSVcIiBzIHw+IEpzLnN0cmluZyBpblxuICBsZXQgc3lfc3RyID0gUHJpbnRmLnNwcmludGYgXCIlLjBmJSVcIiBzIHw+IEpzLnN0cmluZyBpblxuICBpbWcjI3NldEF0dHJpYnV0ZSAoSnMuc3RyaW5nIFwieFwiKSB4X3N0cjtcbiAgaW1nIyNzZXRBdHRyaWJ1dGUgKEpzLnN0cmluZyBcInlcIikgeV9zdHI7XG4gIGltZyMjc2V0QXR0cmlidXRlIChKcy5zdHJpbmcgXCJ3aWR0aFwiKSBzeF9zdHI7XG4gIGltZyMjc2V0QXR0cmlidXRlIChKcy5zdHJpbmcgXCJoZWlnaHRcIikgc3lfc3RyXG5cbmxldCBfbW91bnRfcGF0Y2ggfihncmlkX2lkIDogc3RyaW5nKSB+KHJvdyA6IGludCkgfihjb2wgOiBpbnQpIH4ocm93cyA6IGludCkgfihjb2xzIDogaW50KVxuICAgIH4oaW1nX3NyYyA6IHN0cmluZykgOiB1bml0ID1cbiAgbGV0IG5vX3ByaW9yaXR5IDogSnMuanNfc3RyaW5nIEpzLnQgSnMub3B0ZGVmID0gSnMudW5kZWZpbmVkIGluXG4gIGxldCBncmlkID0gRG9tX2h0bWwuZ2V0RWxlbWVudEJ5SWRfZXhuIGdyaWRfaWQgaW5cbiAgbGV0IHBhdGNoID0gRG9tX2h0bWwuY3JlYXRlRGl2IERvbV9odG1sLmRvY3VtZW50IGluXG4gIHBhdGNoIyMuY2xhc3NOYW1lIDo9IEpzLnN0cmluZyBcInBhdGNoLWl0ZW1cIjtcbiAgaWdub3JlXG4gICAgKHBhdGNoIyMuc3R5bGUjI3NldFByb3BlcnR5XG4gICAgICAgKEpzLnN0cmluZyBcImdyaWQtcm93XCIpXG4gICAgICAgKEpzLnN0cmluZyAoUHJpbnRmLnNwcmludGYgXCIlZCAvIHNwYW4gJWRcIiAocm93ICsgMSkgcm93cykpXG4gICAgICAgbm9fcHJpb3JpdHkpO1xuICBpZ25vcmVcbiAgICAocGF0Y2gjIy5zdHlsZSMjc2V0UHJvcGVydHlcbiAgICAgICAoSnMuc3RyaW5nIFwiZ3JpZC1jb2x1bW5cIilcbiAgICAgICAoSnMuc3RyaW5nIChQcmludGYuc3ByaW50ZiBcIiVkIC8gc3BhbiAlZFwiIChjb2wgKyAxKSBjb2xzKSlcbiAgICAgICBub19wcmlvcml0eSk7XG4gIGxldCBpbWcgPSBEb21faHRtbC5jcmVhdGVJbWcgRG9tX2h0bWwuZG9jdW1lbnQgaW5cbiAgaW1nIyMuc3JjIDo9IEpzLnN0cmluZyBpbWdfc3JjO1xuICBEb20uYXBwZW5kQ2hpbGQgcGF0Y2ggaW1nIHw+IGlnbm9yZTtcbiAgRG9tLmFwcGVuZENoaWxkIGdyaWQgcGF0Y2ggfD4gaWdub3JlXG5cbmxldCAoKSA9XG4gIERvbV9odG1sLndpbmRvdyMjLm9ubG9hZCA6PVxuICAgIERvbV9odG1sLmhhbmRsZXIgKGZ1biBfIC0+XG4gICAgICAgIGxldCBfcXVpbHRfYm9hcmQgPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9leG4gXCJxYl9yZXBsaWNhXCIgaW5cbiAgICAgICAgbGV0IGludHJvID0gRG9tX2h0bWwuZ2V0RWxlbWVudEJ5SWQgXCJpbnRyb1wiIGluXG4gICAgICAgIGxldCBjb250YWluZXIgPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZCBcImNvbnRhaW5lclwiIGluXG4gICAgICAgIGxldCBwYXRjaF9pbnRlcmZhY2UgPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9leG4gXCJjaG9vc2VfcGF0Y2hcIiBpblxuICAgICAgICBsZXQgYmx1ciA9IERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2V4biBcImJsdXJcIiBpblxuICAgICAgICBsZXQgY3ViZV90b2tlbiA9IGdldF9zdmdfaW1hZ2VfZXhuIFwiY3ViZV90dFwiIGluXG4gICAgICAgIGxldCBwYXRjaF9jaG9zZW4gPSBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9leG4gXCJwYXRjaF9jaG9zZW5cIiBpblxuICAgICAgICBsZXQgcHlyYW1pZF90b2tlbiA9IGdldF9zdmdfaW1hZ2VfZXhuIFwicHlyYW1pZF90dFwiIGluXG4gICAgICAgIGxldCBhZHZhbmNlX2J1dHRvbiA9XG4gICAgICAgICAgRG9tX2h0bWwuZ2V0RWxlbWVudEJ5SWRfY29lcmNlIFwiYWR2YW5jZVwiIERvbV9odG1sLkNvZXJjZVRvLmJ1dHRvblxuICAgICAgICBpblxuICAgICAgICBsZXQgcGxhY2VfcGF0Y2hfYnV0dG9uID1cbiAgICAgICAgICBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9jb2VyY2UgXCJwbGFjZV9wYXRjaFwiIERvbV9odG1sLkNvZXJjZVRvLmJ1dHRvblxuICAgICAgICBpblxuICAgICAgICBsZXQgc3RhcnRfZ2FtZV9idXR0b24gPVxuICAgICAgICAgIERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2NvZXJjZSBcInN0YXJ0X2dhbWVcIiBEb21faHRtbC5Db2VyY2VUby5idXR0b25cbiAgICAgICAgaW5cbiAgICAgICAgbGV0IGdvX2JhY2tfYnV0dG9uID1cbiAgICAgICAgICBEb21faHRtbC5nZXRFbGVtZW50QnlJZF9jb2VyY2UgXCJjYW5jZWxfcGF0Y2hcIiBEb21faHRtbC5Db2VyY2VUby5idXR0b25cbiAgICAgICAgaW5cbiAgICAgICAgbGV0IGNhbmNlbF9wbGFjZV9wYXRjaF9idXR0b24gPVxuICAgICAgICAgIERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2NvZXJjZSBcImNhbmNlbF9wcFwiIERvbV9odG1sLkNvZXJjZVRvLmJ1dHRvblxuICAgICAgICBpblxuXG4gICAgICAgIGxldCBjaG9vc2VfcGF0Y2hfMV9idXR0b24gPVxuICAgICAgICAgIERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2NvZXJjZSBcImNob29zZTFcIiBEb21faHRtbC5Db2VyY2VUby5idXR0b25cbiAgICAgICAgaW5cbiAgICAgICAgKCogICAgICAgIGxldCBjaG9vc2VfcGF0Y2hfMl9idXR0b24gPVxuICAgICAgICAgIERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2NvZXJjZSBcImNob29zZTJcIiBEb21faHRtbC5Db2VyY2VUby5idXR0b25cbiAgICAgICAgaW5cbiAgICAgICAgbGV0IGNob29zZV9wYXRjaF8zX2J1dHRvbiA9XG4gICAgICAgIERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2NvZXJjZSBcImNob29zZTNcIiBEb21faHRtbC5Db2VyY2VUby5idXR0b25cbiAgICAgICAgaW4qKVxuICAgICAgICBsZXQgcGxheWVyX25hbWUgPVxuICAgICAgICAgIERvbV9odG1sLmdldEVsZW1lbnRCeUlkX2NvZXJjZSBcInBsYXllcl9uYW1lXCIgRG9tX2h0bWwuQ29lcmNlVG8uaW5wdXRcbiAgICAgICAgaW5cbiAgICAgICAgaW50cm8jIy5zdHlsZSMjLmRpc3BsYXkgOj0gSnMuc3RyaW5nIFwiYmxvY2tcIjtcbiAgICAgICAgY29udGFpbmVyIyMuc3R5bGUjIy5kaXNwbGF5IDo9IEpzLnN0cmluZyBcIm5vbmVcIjtcbiAgICAgICAgKG1hdGNoIGFkdmFuY2VfYnV0dG9uIHdpdGhcbiAgICAgICAgfCBOb25lIC0+IGxvZyBcIk1pc3NpbmcgYWR2YW5jZSBidXR0b24uXCJcbiAgICAgICAgfCBTb21lIGJ0biAtPlxuICAgICAgICAgICAgYnRuIyMub25jbGljayA6PVxuICAgICAgICAgICAgICBEb21faHRtbC5oYW5kbGVyIChmdW4gXyAtPlxuICAgICAgICAgICAgICAgICAgbGV0IGN1cnJlbnRfcGxheWVyID0gKHVud3JhcF9leG4gIWN1cnJlbnRfc3RhdGUpLnR1cm4gaW5cbiAgICAgICAgICAgICAgICAgIGN1cnJlbnRfc3RhdGUgOj1cbiAgICAgICAgICAgICAgICAgICAgU29tZSAoTW92ZS5jaG9vc2VfbW92ZSAodW53cmFwX2V4biAhY3VycmVudF9zdGF0ZSkgQWR2YW5jZSAwIDAgMCk7XG4gICAgICAgICAgICAgICAgICBpZiBjdXJyZW50X3BsYXllci5wbGF5ZXJfbnVtID0gMSB0aGVuIChcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb25fdG9rZW5fb25fYm9hcmQgY3ViZV90b2tlbiAxO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVfYnV0dG9uc191aSBjdXJyZW50X3BsYXllciAxO1xuICAgICAgICAgICAgICAgICAgICBKcy5fZmFsc2UpXG4gICAgICAgICAgICAgICAgICBlbHNlIChcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb25fdG9rZW5fb25fYm9hcmQgcHlyYW1pZF90b2tlbiAyO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVfYnV0dG9uc191aSBjdXJyZW50X3BsYXllciAyO1xuICAgICAgICAgICAgICAgICAgICBKcy5fZmFsc2UpKSk7XG5cbiAgICAgICAgKG1hdGNoIHBsYWNlX3BhdGNoX2J1dHRvbiB3aXRoXG4gICAgICAgIHwgTm9uZSAtPiBsb2cgXCJNaXNzaW5nIHBsYWNlIHBhdGNoIGJ1dHRvbi5cIlxuICAgICAgICB8IFNvbWUgYnRuIC0+XG4gICAgICAgICAgICBidG4jIy5vbmNsaWNrIDo9XG4gICAgICAgICAgICAgIERvbV9odG1sLmhhbmRsZXIgKGZ1biBfIC0+XG4gICAgICAgICAgICAgICAgICBwYXRjaF9pbnRlcmZhY2UjIy5zdHlsZSMjLmRpc3BsYXkgOj0gSnMuc3RyaW5nIFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgICAgIGJsdXIjIy5zdHlsZSMjLmRpc3BsYXkgOj0gSnMuc3RyaW5nIFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgICAgIHNldF9wYXRjaF9jaG9pY2Vfc3JjcyAoKTtcbiAgICAgICAgICAgICAgICAgIEpzLl9mYWxzZSkpO1xuICAgICAgICAobWF0Y2ggY2hvb3NlX3BhdGNoXzFfYnV0dG9uIHdpdGhcbiAgICAgICAgfCBOb25lIC0+IGxvZyBcIk1pc3NpbmcgY2hvb3NlIHBhdGNoIGJ1dHRvbi5cIlxuICAgICAgICB8IFNvbWUgYnRuIC0+XG4gICAgICAgICAgICBidG4jIy5vbmNsaWNrIDo9XG4gICAgICAgICAgICAgIERvbV9odG1sLmhhbmRsZXIgKGZ1biBfIC0+XG4gICAgICAgICAgICAgICAgICBsZXQgcGF0Y2hfaW5kZXgsIF8sIF8gPVxuICAgICAgICAgICAgICAgICAgICBQYXRjaC5nZXRfdGhyZWUgKHVud3JhcF9leG4gIWN1cnJlbnRfc3RhdGUpLm5ldXQucG9zXG4gICAgICAgICAgICAgICAgICAgICAgKHVud3JhcF9leG4gIWN1cnJlbnRfc3RhdGUpLnBhdGNoZXNfcmVtYWluaW5nXG4gICAgICAgICAgICAgICAgICBpblxuICAgICAgICAgICAgICAgICAgcGVuZGluZ19wYXRjaF9pbmRleCA6PSBTb21lIHBhdGNoX2luZGV4O1xuICAgICAgICAgICAgICAgICAgcGF0Y2hfaW50ZXJmYWNlIyMuc3R5bGUjIy5kaXNwbGF5IDo9IEpzLnN0cmluZyBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICAgIGJsdXIjIy5zdHlsZSMjLmRpc3BsYXkgOj0gSnMuc3RyaW5nIFwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgY29udGFpbmVyIyMuc3R5bGUjIy5kaXNwbGF5IDo9IEpzLnN0cmluZyBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICAgIHBhdGNoX2Nob3NlbiMjLnN0eWxlIyMuZGlzcGxheSA6PSBKcy5zdHJpbmcgXCJncmlkXCI7XG4gICAgICAgICAgICAgICAgICBKcy5fZmFsc2UpKTtcbiAgICAgICAgKG1hdGNoIGNhbmNlbF9wbGFjZV9wYXRjaF9idXR0b24gd2l0aFxuICAgICAgICB8IE5vbmUgLT4gbG9nIFwiTWlzc2luZyBnbyBiYWNrIGJ1dHRvbi5cIlxuICAgICAgICB8IFNvbWUgYnRuIC0+XG4gICAgICAgICAgICBidG4jIy5vbmNsaWNrIDo9XG4gICAgICAgICAgICAgIERvbV9odG1sLmhhbmRsZXIgKGZ1biBfIC0+XG4gICAgICAgICAgICAgICAgICBwYXRjaF9jaG9zZW4jIy5zdHlsZSMjLmRpc3BsYXkgOj0gSnMuc3RyaW5nIFwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgY29udGFpbmVyIyMuc3R5bGUjIy5kaXNwbGF5IDo9IEpzLnN0cmluZyBcImdyaWRcIjtcbiAgICAgICAgICAgICAgICAgIGJsdXIjIy5zdHlsZSMjLmRpc3BsYXkgOj0gSnMuc3RyaW5nIFwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgSnMuX2ZhbHNlKSk7XG4gICAgICAgIChtYXRjaCBnb19iYWNrX2J1dHRvbiB3aXRoXG4gICAgICAgIHwgTm9uZSAtPiBsb2cgXCJNaXNzaW5nIGdvIGJhY2sgYnV0dG9uLlwiXG4gICAgICAgIHwgU29tZSBidG4gLT5cbiAgICAgICAgICAgIGJ0biMjLm9uY2xpY2sgOj1cbiAgICAgICAgICAgICAgRG9tX2h0bWwuaGFuZGxlciAoZnVuIF8gLT5cbiAgICAgICAgICAgICAgICAgIHBhdGNoX2ludGVyZmFjZSMjLnN0eWxlIyMuZGlzcGxheSA6PSBKcy5zdHJpbmcgXCJub25lXCI7XG4gICAgICAgICAgICAgICAgICBibHVyIyMuc3R5bGUjIy5kaXNwbGF5IDo9IEpzLnN0cmluZyBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICAgIEpzLl9mYWxzZSkpO1xuICAgICAgICAobWF0Y2ggc3RhcnRfZ2FtZV9idXR0b24gd2l0aFxuICAgICAgICB8IE5vbmUgLT4gbG9nIFwiTWlzc2luZyBzdGFydCBidXR0b24uXCJcbiAgICAgICAgfCBTb21lIGJ0biAtPlxuICAgICAgICAgICAgYnRuIyMub25jbGljayA6PVxuICAgICAgICAgICAgICBEb21faHRtbC5oYW5kbGVyIChmdW4gXyAtPlxuICAgICAgICAgICAgICAgICAgaW50cm8jIy5zdHlsZSMjLmRpc3BsYXkgOj0gSnMuc3RyaW5nIFwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgY29udGFpbmVyIyMuc3R5bGUjIy5kaXNwbGF5IDo9IEpzLnN0cmluZyBcImdyaWRcIjtcbiAgICAgICAgICAgICAgICAgIGxldCByYXdfaW5wdXQgPVxuICAgICAgICAgICAgICAgICAgICBtYXRjaCBwbGF5ZXJfbmFtZSB3aXRoXG4gICAgICAgICAgICAgICAgICAgIHwgTm9uZSAtPlxuICAgICAgICAgICAgICAgICAgICAgICAgbG9nIFwiUGxheWVyIG5hbWUgaW5wdXQgbm90IGZvdW5kLlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJQbGF5ZXJcIlxuICAgICAgICAgICAgICAgICAgICB8IFNvbWUgaW5wdXQgLT4gSnMudG9fc3RyaW5nIGlucHV0IyMudmFsdWVcbiAgICAgICAgICAgICAgICAgIGluXG4gICAgICAgICAgICAgICAgICBsZXQgcG5hbWUgPSByYXdfaW5wdXQgfD4gU3RyaW5nLnRyaW0gaW5cbiAgICAgICAgICAgICAgICAgIGxldCBwbmFtZSA9IGlmIHBuYW1lID0gXCJcIiB0aGVuIFwiUGxheWVyXCIgZWxzZSBwbmFtZSBpblxuICAgICAgICAgICAgICAgICAgbGV0IHN0YXRlID0gaW5pdGlhbGl6ZV9nYW1lIHBuYW1lIGluXG4gICAgICAgICAgICAgICAgICBjdXJyZW50X3N0YXRlIDo9IFNvbWUgc3RhdGU7XG4gICAgICAgICAgICAgICAgICBwbGFjZV9wYXRjaF9pbWFnZXNfYXJvdW5kX2NpcmNsZSBzdGF0ZS5wYXRjaGVzO1xuICAgICAgICAgICAgICAgICAgcG9zaXRpb25fdG9rZW5fb25fYm9hcmQgY3ViZV90b2tlbiAxO1xuICAgICAgICAgICAgICAgICAgcG9zaXRpb25fdG9rZW5fb25fYm9hcmQgcHlyYW1pZF90b2tlbiAyO1xuICAgICAgICAgICAgICAgICAgbGV0IGNvdW50ID0gNSBpblxuICAgICAgICAgICAgICAgICAgc2V0X2J1dHRvbl9jb3VudF9hbmRfc3JjIH5jb3VudCB+dHh0X2NvdW50X2lkOlwicDFfYnV0dG9uc1wiXG4gICAgICAgICAgICAgICAgICAgIH5pbWFnZV9pZDpcInAxX2J1dHRvbnNfaW1nXCI7XG4gICAgICAgICAgICAgICAgICBzZXRfYnV0dG9uX2NvdW50X2FuZF9zcmMgfmNvdW50IH50eHRfY291bnRfaWQ6XCJwMl9idXR0b25zXCJcbiAgICAgICAgICAgICAgICAgICAgfmltYWdlX2lkOlwicDJfYnV0dG9uc19pbWdcIjtcbiAgICAgICAgICAgICAgICAgIGxvZyBcIkdhbWUgc3RhcnRlZC5cIjtcbiAgICAgICAgICAgICAgICAgIEpzLl9mYWxzZSkpO1xuICAgICAgICBKcy5fZmFsc2UpXG4iXSwibmFtZXMiOlsicnVudGltZSIsImNzdF9idXR0b25zIiwiY3N0X3N0ZXBzIiwiY3N0XzBmIiwiY3N0X3N2ZyIsImNzdF9NaXNzaW5nX2dvX2JhY2tfYnV0dG9uIiwiY3N0X1BsYXllciIsImNzdF9ibG9jayIsImNzdF9ncmlkIiwiY3N0X25vbmUiLCJjc3RfcDFfYnV0dG9ucyIsImNzdF9wMV9idXR0b25zX2ltZyIsImNzdF9wMl9idXR0b25zIiwiY3N0X3AyX2J1dHRvbnNfaW1nIiwiY3N0X3NyYyIsImNzdF9zdmdzIiwiY2FtbF9qc3N0cmluZ19vZl9zdHJpbmciLCJjYW1sX2NhbGwxIiwiZiIsImEwIiwiY2FtbF9jYWxsMiIsImExIiwiY2FtbF9jYWxsNSIsImEyIiwiYTMiLCJhNCIsImR1bW15IiwiZ2xvYmFsX2RhdGEiLCJQYXRjaHdvcmsiLCJTZXhwbGliX1NleHAiLCJTdGRsaWIiLCJKc19vZl9vY2FtbF9Eb21faHRtbCIsIkpzX29mX29jYW1sX0pzIiwiU3RkbGliX1N0cmluZyIsIlN0ZGxpYl9QcmludGYiLCJKc19vZl9vY2FtbF9Db25zb2xlIiwiY3N0X1RyaWVkX3RvX3Vud3JhcF9Ob25lIiwibG9nIiwicyIsInQxIiwidDAiLCJnZXRfc3ZnX2ltYWdlX2V4biIsImlkIiwiZWwiLCJ1bndyYXBfZXhuIiwib3B0IiwieCIsIm1haW5fYm9hcmRfcG9zaXRpb25zIiwicGxheWVyIiwic2xvdCIsInN3aXRjaGVyIiwiY3VycmVudF9zdGF0ZSIsImNzdF9zdmdzXzUwX3N0YWNrX2J1dHRvbnNfc3ZnIiwiY3N0X3N2Z3NfNDBfc3RhY2tfYnV0dG9uc19zdmciLCJjc3Rfc3Znc18zMF9zdGFja19idXR0b25zX3N2ZyIsImNzdF9zdmdzXzIwX3N0YWNrX2J1dHRvbnNfc3ZnIiwiY3N0X3N2Z3NfMTBfc3RhY2tfYnV0dG9uc19zdmciLCJjc3Rfc3Znc181X3N0YWNrX2J1dHRvbnNfc3ZnIiwiY3N0X3N2Z3NfMV9zdGFja19idXR0b25zX3N2ZyIsImNzdF9FbXB0eSIsImNzdF9wdGNoIiwiY3N0X3BhdGNoIiwiY3N0X3BhdGNoMV9pbWFnZSIsImNzdF9wYXRjaDJfaW1hZ2UiLCJjc3RfcGF0Y2gzX2ltYWdlIiwiY3N0X3BhdGNoMV9jb3N0IiwiY3N0X3BhdGNoMV90aW1lIiwiY3N0X3BhdGNoMl9jb3N0IiwiY3N0X3BhdGNoMl90aW1lIiwiY3N0X3BhdGNoM19jb3N0IiwiY3N0X3BhdGNoM190aW1lIiwiY3N0X3FiX3JlcGxpY2EiLCJjc3RfaW50cm8iLCJjc3RfY29udGFpbmVyIiwiY3N0X2Nob29zZV9wYXRjaCIsImNzdF9ibHVyIiwiY3N0X2N1YmVfdHQiLCJjc3RfcGF0Y2hfY2hvc2VuIiwiY3N0X3B5cmFtaWRfdHQiLCJjc3RfYWR2YW5jZSIsImNzdF9wbGFjZV9wYXRjaCIsImNzdF9zdGFydF9nYW1lIiwiY3N0X2NhbmNlbF9wYXRjaCIsImNzdF9jYW5jZWxfcHAiLCJjc3RfY2hvb3NlMSIsImNzdF9wbGF5ZXJfbmFtZSIsImNzdF9HYW1lX3N0YXJ0ZWQiLCJjc3RfUGxheWVyX25hbWVfaW5wdXRfbm90X2ZvdW4iLCJjc3RfTWlzc2luZ19zdGFydF9idXR0b24iLCJjc3RfTWlzc2luZ19jaG9vc2VfcGF0Y2hfYnV0dG8iLCJjc3RfTWlzc2luZ19wbGFjZV9wYXRjaF9idXR0b24iLCJjc3RfTWlzc2luZ19hZHZhbmNlX2J1dHRvbiIsInNldF9idXR0b25fY291bnRfYW5kX3NyYyIsIm51bV9idXR0b25zIiwidHh0X2NvdW50X2lkIiwiaW1hZ2VfaWQiLCJidXR0b25fdGV4dCIsInQyIiwiaW1hZ2UiLCJ0NiIsInVwZGF0ZV9idXR0b25zX3VpIiwicGxheWVyX251bSIsImNvdW50IiwiZmluZF9wYXRjaF9uYW1lIiwicGwiLCJpIiwidGwiLCJoZCIsInBvc2l0aW9uX3Rva2VuX29uX2JvYXJkIiwiaW1nIiwibiIsInN0YXRlIiwibWF0Y2giLCJ5IiwieF9zdHIiLCJ5X3N0ciIsInN4X3N0ciIsInN5X3N0ciIsInQxMjUiLCJwYXJhbSIsImludHJvIiwiY29udGFpbmVyIiwicGF0Y2hfaW50ZXJmYWNlIiwiYmx1ciIsImN1YmVfdG9rZW4iLCJwYXRjaF9jaG9zZW4iLCJweXJhbWlkX3Rva2VuIiwiYWR2YW5jZV9idXR0b24iLCJwbGFjZV9wYXRjaF9idXR0b24iLCJzdGFydF9nYW1lX2J1dHRvbiIsImdvX2JhY2tfYnV0dG9uIiwiY2FuY2VsX3BsYWNlX3BhdGNoX2J1dHRvbiIsImNob29zZV9wYXRjaF8xX2J1dHRvbiIsInBsYXllcl9uYW1lIiwidDY5IiwidDcyIiwiYnRuIiwidDczIiwiY3VycmVudF9wbGF5ZXIiLCJ0ODEiLCJ0NzciLCJ0ODAiLCJwMV9pbWciLCJwMl9pbWciLCJwM19pbWciLCJwM19udW0iLCJwMl9udW0iLCJwMV9udW0iLCJwMV9uYW1lIiwicDJfbmFtZSIsInAzX25hbWUiLCJwMV9jb3N0IiwicDFfdGltZSIsInAyX2Nvc3QiLCJwMl90aW1lIiwicDNfY29zdCIsInAzX3RpbWUiLCJwMV9zaGFwZSIsInAyX3NoYXBlIiwicDNfc2hhcGUiLCJwMXQiLCJwMWMiLCJwMnQiLCJwMmMiLCJwM3QiLCJwM2MiLCJ0MjAiLCJ0MjIiLCJ0MjQiLCJ0MjYiLCJ0MjgiLCJ0MzAiLCJwMV9zcmMiLCJwMl9zcmMiLCJwM19zcmMiLCJ0MzQiLCJ0MzciLCJ0NDAiLCJ0OTUiLCJ0ODUiLCJ0ODgiLCJ0OTEiLCJ0OTQiLCJ0MTA3IiwidDEwNiIsInQ5OSIsInQxMDIiLCJ0MTA1IiwidDExNSIsInQxMTQiLCJ0MTEwIiwidDExMyIsInQxMjQiLCJ0MTIzIiwidDExOCIsInQxMjEiLCJpbnB1dCIsInJhd19pbnB1dCIsInBuYW1lIiwicGF0Y2hfaWQiLCJwYXRjaF9uYW1lIiwicGF0Y2hfc2hhcGUiLCJyb3ciLCJjb2wiLCJpbWdfc3JjIiwicGF0Y2hfaW1hZ2UiLCJwYXRjaF9jb250Iiwibm9fcHJpb3JpdHkiLCJ0OSIsInQxMyIsInQxMSIsInQxOCIsInQxNiIsInQxMjYiLCJEdW5lX2V4ZV9NYWluIl0sIm1hcHBpbmdzIjoiSUFBQUEsVUFBQTtBQUFBLElBQUFDLGdCQUFBO0FBQUEsSUFBQUMsY0FBQTtBQUFBLElBQUFDLFNBQUE7QUFBQSxJQUFBQyxZQUFBO0FBQUEsSUFBQUMsK0JBQUE7QUFBQSxJQUFBQyxlQUFBO0FBQUEsSUFBQUMsWUFBQTtBQUFBLElBQUFDLFdBQUE7QUFBQSxJQUFBQyxXQUFBO0FBQUEsSUFBQUMsbUJBQUE7QUFBQSxJQUFBQyx1QkFBQTtBQUFBLElBQUFDLG1CQUFBO0FBQUEsSUFBQUMsdUJBQUE7QUFBQSxJQUFBQyxVQUFBO0FBQUEsSUFBQUMsYUFBQTtBQUFBLElBQUFDLDBCQUFBO0FBQUEsWUFBQUMsV0FBQUMsR0FBQUM7QUFBQUEs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
