:root {
    --n: 9;
    --patch-grid-size: 60vmin;
    --cursor-min: 12px;
    --cursor-ideal: 7vmin;
    --cursor-max: 87.5px;
}

html,
body {
    overflow-x: hidden;
}

.container {
    display: none;
    grid-template-columns: 1fr 1.5fr 1fr;
    grid-template-rows: 10vh 80vh 10vh;
    height: 100vh;
    border: 1px dashed #000;
}

.container img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    justify-self: center;
    align-self: center;
    display: block;
}
.container button {
    font-size: clamp(0.8rem, 1.5vw, 1.2rem);
    padding: clamp(0.4rem, 1vw, 0.8rem) clamp(0.8rem, 2vw, 1.5rem);
    border-radius: 0.5rem;
    width: clamp(6rem, 20vw, 10rem);
    object-fit: contain;
    justify-self: center;
    align-self: center;
}

#cursor-patch-img {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: clamp(
        calc(var(--cursor-min) * var(--cols, 1)),
        calc(var(--cursor-ideal) * var(--cols, 1)),
        calc(var(--cursor-max) * var(--cols, 1))
    );
    height: auto;
    pointer-events: none;
    transition: transform 0.1s ease-out;
    will-change: transform;
    transform: translate(calc(var(--x, 0px)), calc(var(--y, 0px)))
        translate(-20%, -20%);
}

.header {
    grid-column: 1 / span 3;
}

.cancel_patch {
    grid-column: 1 / -1;
    justify-self: center;
    margin-top: clamp(8px, 2vw, 24px);
}

.mb {
    position: relative;
    grid-template-rows: 1fr 1fr;
    gap: 0;
    background-color: white;
    display: grid;
    place-items: center;
    container-type: size;
}

.metrics {
    display: flex;
    align-items: flex-end;
    justify-content: center;
    gap: 3%;
    padding: 10px;
    background-color: pink;
    font-size: 24px;
    font-family: Georgia, "Times New Roman", Times, serif;
    text-align: center;
}

.metrics img {
    width: 18vw;
    height: auto;
    object-fit: contain;
    flex: 0 0 auto;
}

#name_error {
    color: red;
    font-size: 24px;
    font-family: Georgia, "Times New Roman", Times, serif;
    text-align: center;
}

.advance {
    display: inline-block;
    padding: 15px 25px;
    font-size: 24px;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    font-family: Georgia, "Times New Roman", Times, serif;
    color: #fff;
    background-color: #2faad6;
    border: none;
    border-radius: 15px;
    box-shadow: 0 9px #999;
}

.advance:active {
    box-shadow: 0 5px #666;
    transform: translateY(4px);
}

.pp {
    display: inline-block;
    padding: 15px 25px;
    font-size: 24px;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    font-family: Georgia, "Times New Roman", Times, serif;
    color: #fff;
    background-color: #ec0544;
    border: none;
    border-radius: 15px;
    box-shadow: 0 9px #999;
}

.pp:active {
    box-shadow: 0 5px #666;
    transform: translateY(4px);
}

#player_name_turn_greeting,
#ai_name_turn_greeting {
    position: absolute;
    top: 10vh;
    display: flex;
    align-items: center;
    gap: 2px;
    height: 4vh;
}

#player_name_turn_greeting img.glyph,
#ai_name_turn_greeting img.glyph {
    width: 100%;
    height: auto;
    display: block;
}

.button-up {
    position: fixed;
    inset: 0;
    pointer-events: none;
    visibility: hidden;
    opacity: 0;
    overflow: visible;
    z-index: 999;
}

.button-up.visible {
    visibility: visible;
    opacity: 1;
}

.button-up-p1,
.button-up-p2 {
    visibility: hidden;
    opacity: 0;
    top: 100vh;
    left: 50vw;
    font-size: clamp(1.5rem, 3vw + 1rem, 3rem);
    font-family: Georgia, "Times New Roman", Times, serif;
    position: absolute;
}

.button-up-p1.visible {
    visibility: visible;
    opacity: 1;
    animation:
        rise 1s ease-out,
        arc1 0.7s linear forwards 1s;
    z-index: 9999;
}

.button-up-p2.visible {
    visibility: visible;
    opacity: 1;
    animation:
        rise 1s ease-out,
        arc2 0.7s linear forwards 1s;
    z-index: 9999;
}

@keyframes rise {
    from {
        top: 100vh;
    }
    to {
        top: 50vh;
    }
}

@keyframes arc1 {
    0% {
        left: 50vw;
        top: 50vh;
    }
    20% {
        left: 40vw;
        top: 60vh;
    }
    40% {
        left: 30vw;
        top: 70vh;
    }
    60% {
        left: 20vw;
        top: 80vh;
    }
    80% {
        left: 10vw;
        top: 90vh;
    }
    100% {
        left: 0vw;
        top: 100vh;
        visibility: hidden;
    }
}

@keyframes arc2 {
    0% {
        left: 50vw;
        top: 50vh;
    }
    20% {
        left: 60vw;
        top: 60vh;
    }
    40% {
        left: 70vw;
        top: 70vh;
    }
    60% {
        left: 80vw;
        top: 80vh;
    }
    80% {
        left: 90vw;
        top: 90vh;
    }
    100% {
        left: 100vw;
        top: 100vh;
        visibility: hidden;
    }
}

.qb {
    position: absolute;
    left: 5vw;
    top: 20vh;
    background-color: white;
    align-self: center;
    width: 75cqw;
    aspect-ratio: 1;
    transition:
        transform 0.6s ease,
        box-shadow 0.6s ease;
    cursor: pointer;
}

.qb.zoomed {
    display: inline-block;
    position: fixed;
    top: 50%;
    left: 50%;
    padding: 0;
    border: 0;
    transform: translate(-50%, -50%);
    z-index: 999;
    box-shadow: 0 0 40px rgba(0, 0, 0, 0.4);
    width: min(90vmin, 800px);
    max-height: 90vh;
    background: transparent;
    overflow: hidden;
}

.qb.zoomed svg {
    display: block;
    width: 100%;
    height: 100%;
}

.qb img {
    display: block;
    width: 100%;
    height: 100%;
}

.main_board {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 55cqw;
    height: 55cqw;
    background-color: black;
    transform: translate(-50%, -50%);
    box-shadow: -5px 5px 5px rgba(0, 0, 0, 0.5);
    transition:
        transform 0.6s ease,
        box-shadow 0.6s ease;
    cursor: pointer;
}

#hover_cell {
    fill: #ffd54d;
    fill-opacity: 0.35;
    pointer-events: none;
}

.patch_chosen {
    display: none;
    min-height: 100dvh;
    place-items: center;
    background-color: #f6f6f6;
}
.qb_replica {
    width: var(--patch-grid-size);
    height: var(--patch-grid-size);
    display: grid;
    grid-template-columns: repeat(var(--n), 1fr);
    grid-template-rows: repeat(var(--n), 1fr);
    background: #fff;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
}

.replica-cell {
    grid-column: var(--col);
    grid-row: var(--row);
    background-color: #f1f1f1;
    border: 2px dashed black;
}

.replica-cell:hover {
    background-color: #ffd54d;
}

@media (max-width: 480px) {
    :root {
        --cursor-ideal: 5vmin;
        --cursor-max: 40px;
    }
}

.preload {
    visibility: hidden;
    opacity: 0;
}

.grid-cell-patch-overlay {
    --cols: 1;
    --rows: 1;
    --row: 1;
    --col: 1;
    grid-row: var(--row) / span var(--rows);
    grid-column: var(--col) / span var(--cols);
    z-index: 10;
    width: clamp(
        calc(var(--cursor-min) * var(--cols, 1)),
        calc(var(--cursor-ideal) * var(--cols, 1)),
        calc(var(--cursor-max) * var(--cols, 1))
    );
    height: auto;
    pointer-events: none;
    object-fit: contain;
}

.mb_overlay {
    position: fixed;
    inset: 0;
    display: none;
    justify-content: center;
    align-items: center;
    background: rgba(0, 0, 0, 0.35);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    z-index: 999;
    transition: opacity 0.4s ease;
    opacity: 0;
}

body.overlay-active::before {
    content: "";
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    z-index: 998;
    transition: opacity 0.4s ease;
}

.main_board.zoomed {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(1.8);
    z-index: 999;
    box-shadow: 0 0 40px rgba(0, 0, 0, 0.4);
}

.quilt_board {
    vertical-align: center;
    background-color: orange;
}

.choose_patch {
    display: none;
    flex-direction: column;
    position: fixed;
    inset: 50% auto auto 50%;
    transform: translate(-50%, -50%);
    width: min(80vw, 900px);
    aspect-ratio: 1.4 / 1;
    padding: 2cqw;
    box-sizing: border-box;
    background-image: url("svgs/ChoosePatchModalBackground.png");
    background-size: 100% 100%;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
    z-index: 999;
    overflow: hidden;
}
@media (max-width: 1190px) {
    .choose_patch {
        aspect-ratio: 1.7 / 1;
    }
}
@media (max-width: 1000px) {
    .choose_patch {
        aspect-ratio: 2/1;
    }
}
@media (max-width: 700px) {
    .choose_patch {
        aspect-ratio: 1.7/1;
    }
}
.inner_choices {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    width: 100%;
    grid-auto-flow: row;
    height: 100%;
    place-items: center;
    column-gap: clamp(8px, 3vw, 40px);
    row-gap: clamp(6px, 2vw, 24px);
}

.inner_choices > * {
    min-width: 0;
    min-height: 0;
}

.inner_choices-img {
    display: block;
    max-width: 100%;
    max-height: 70%;
    object-fit: contain;
}

.inner_choices button {
    font-size: clamp(0.8rem, 1.5vw, 1.2rem);
    padding: clamp(0.4rem, 1vw, 0.8rem) clamp(0.8rem, 2vw, 1.5rem);
    border-radius: 0.5rem;
    width: clamp(6rem, 20vw, 10rem);
}

.patch_display_box {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-auto-rows: min-content;
    align-items: center;
    justify-items: center;
    background-color: #eee;
    border: 2px dashed #000;
    padding: clamp(8px, 2vw, 16px);
    box-sizing: border-box;
}

.patch_display_image {
    grid-column: 1 / -1;
    width: 100%;
    display: grid;
    place-items: center;
    margin-bottom: clamp(6px, 1.5vw, 12px);
}

.inner_choices-img {
    max-width: 100%;
    max-height: 30vh;
    height: auto;
    object-fit: contain;
}

.label {
    justify-self: end;
}
.value {
    justify-self: start;
    padding-left: 0.5rem;
}

.patch_actions {
    grid-column: 1 / -1;
    margin-top: clamp(6px, 1.5vw, 12px);
}

.patch_actions .advance {
    width: clamp(6rem, 18vw, 10rem);
    font-size: clamp(0.8rem, 1.2vw, 1rem);
    padding: clamp(0.4rem, 1vw, 0.8rem) clamp(0.8rem, 2vw, 1.5rem);
}

.blur {
    display: none;
    position: fixed;
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(8px);
    z-index: 998;
}

.circle {
    position: relative;
    width: 100cqmin;
    aspect-ratio: 1;
    background: #fff;
    container-type: inline-size;
    --u: 4cqi;
    --ring: 44cqi;
    --total: 33;
    --scale: 0.75;
}

.intro {
    display: none;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;
    font-size: clamp(1.5rem, 3vw + 1rem, 3rem);
    font-family: Georgia, "Times New Roman", Times, serif;
    text-align: center;
}

svg image {
    transition: all 0.4s ease;
}

#loading-message {
    position: fixed;
    inset: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #fff; /* or black if your site is dark */
    color: #333;
    z-index: 9999;
    transition: opacity 0.4s ease;
    font-size: clamp(1.5rem, 3vw + 1rem, 3rem);
    font-family: Georgia, "Times New Roman", Times, serif;
    animation: pulse 1.2s ease-in-out infinite;
}

#loading-message.hide {
    display: none;
    opacity: 0;
    pointer-events: none;
}

@keyframes pulse {
    0%,
    100% {
        opacity: 0.4;
    }
    50% {
        opacity: 1;
    }
}

.red-tint {
    filter: brightness(0) saturate(100%) invert(19%) sepia(99%) saturate(6274%)
        hue-rotate(-6deg) brightness(94%) contrast(118%);
}
.intro img {
    width: 35vw;
    margin: 5vw;
}

.intro input {
    font-size: clamp(1.5rem, 3vw + 1rem, 3rem);
    font-family: Georgia, "Times New Roman", Times, serif;
    background-color: #eee;
    border: 2px dashed #000;
    margin: 5vw;
}

.patch-wrap {
    --angle: calc(360deg / var(--total) * var(--i));
    position: absolute;
    top: 50%;
    left: 50%;
    transform-origin: center;
    transform: translate(-50%, -50%) rotate(var(--angle))
        translateY(var(--ring));
}

.patch {
    --cols: 1;
    --rows: 1;
    position: absolute;
    top: 0;
    left: 0;
    width: calc(var(--cols) * var(--u));
    height: calc(var(--rows) * var(--u));
    transform: translate(-50%, -50%) scale(var(--scale));
    transform-origin: center;
}

.patch .neutralize {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-origin: center;
    transform: rotate(calc(-1 * var(--angle))) scale(calc(1 / var(--scale)));
}
.patch .neutralize > img {
    position: absolute;
    inset: 0;
    object-fit: contain;
}

.pyramid {
    width: 10%;
    height: auto;
    aspect-ratio: auto;
}
